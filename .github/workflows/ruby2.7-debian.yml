name: ruby2.7-debian

on: [ workflow_dispatch ]

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
      -
        name: Docker Buildx (build) - ruby2.7-debian
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --platform linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 \
            --output "type=image,push=false" \
            --tag collelog/buildenv:ruby2.7-debian \
            --file ./ruby2.7-debian.Dockerfile ./
      -
        name: Docker Buildx (push) - ruby2.7-debian
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 \
            --output "type=image,push=true" \
            --tag collelog/buildenv:ruby2.7-debian \
            --file ./ruby2.7-debian.Dockerfile ./
      -
        name: Docker Check Manifest - ruby2.7-debian
        run: |
          docker run --rm mplatform/mquery collelog/buildenv:ruby2.7-debian
      -
        name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
